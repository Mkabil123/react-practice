[{"C:\\programfiles_kabil\\Test_task\\application\\src\\index.js":"1","C:\\programfiles_kabil\\Test_task\\application\\src\\reportWebVitals.js":"2","C:\\programfiles_kabil\\Test_task\\application\\src\\App.js":"3","C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Mainpage.js":"4","C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Homepage.js":"5","C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Mobilephone.js":"6"},{"size":535,"mtime":1656393163975,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1656393164210,"results":"9","hashOfConfig":"8"},{"size":284,"mtime":1656563424214,"results":"10","hashOfConfig":"8"},{"size":1670,"mtime":1656406565625,"results":"11","hashOfConfig":"8"},{"size":7418,"mtime":1657015004561,"results":"12","hashOfConfig":"8"},{"size":161,"mtime":1656399128983,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"13za5h5",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\programfiles_kabil\\Test_task\\application\\src\\index.js",[],[],[],"C:\\programfiles_kabil\\Test_task\\application\\src\\reportWebVitals.js",[],[],"C:\\programfiles_kabil\\Test_task\\application\\src\\App.js",[],[],"C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Mainpage.js",[],[],[],"C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Homepage.js",["35"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Homepage = () => {\r\n  const [data, getData] = useState([]);\r\n  const [filter, getFilter] = useState([]);\r\n  const [price, setPrice] = useState({\r\n    start: \"\",\r\n    end: \"\",\r\n  });\r\n  const [formError, setFormError] = useState({});\r\n  const [category, setCategory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const re = /^[0-9\\b]+$/;\r\n\r\n  const onChangeprice = (e) => {\r\n    if (e.target.value === \"\" || re.test(e.target.value))\r\n      setPrice({ ...price, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const gettingdata = () => {\r\n    setLoading(true);\r\n\r\n    axios.get(\"https://fakestoreapi.com/products\").then((response) => {\r\n      setLoading(false);\r\n      getData(response.data);\r\n      getFilter(response.data);\r\n      setCategory(response.data);\r\n    });\r\n  };\r\n\r\n  const filteritem = (event) => {\r\n    getData(\r\n      filter.filter((datas) => {\r\n        return datas.title\r\n          .toString()\r\n          .toUpperCase()\r\n          .includes(event.target.value.toUpperCase());\r\n      })\r\n    );\r\n  };\r\n\r\n  const filtereditem = (e) => {\r\n    console.log(e);\r\n    getData(\r\n      filter.filter((datas) => {\r\n        setFormError(validate(price));\r\n        let prices = datas.price;\r\n\r\n        return price.start && price.end\r\n          ? prices >= price.start && prices <= price.end\r\n          : datas.price;\r\n      })\r\n    );\r\n  };\r\n\r\n  const categoryitem = (categories) => {\r\n    getData(\r\n      category.filter((datas) => {\r\n        if (categories.target.value === \"All\") {\r\n          return datas.price;\r\n        } else {\r\n          return datas.category\r\n            .toString()\r\n            .toUpperCase()\r\n            .includes(categories.target.value.toUpperCase());\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    gettingdata();\r\n    setLoading(true);\r\n    // setTimeout(() => {\r\n    //   setLoading(false);\r\n    // }, 5000);\r\n  }, []);\r\n\r\n  const validate = (price) => {\r\n    const errors = {};\r\n    if (!price.start) {\r\n      errors.start = \"Starting value is required!\";\r\n    }\r\n    if (!price.end || price.start > price.end) {\r\n      errors.end = \"Ending value is required!\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: \"steelblue\" }}>\r\n      <div className=\"container\" style={{ Color: \"bisque\" }}>\r\n        <Card style={{ paddingLeft: \"5%\", backgroundColor: \"#d9d9d9\" }}>\r\n          <h6>Filter By Price</h6>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"start\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter starting price\"\r\n                value={price.start}\r\n                onChange={onChangeprice}\r\n              ></input>\r\n              <p style={{ color: \"red\" }}>{formError.start}</p>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"end\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter ending price\"\r\n                value={price.end}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    filtereditem(e);\r\n                  }\r\n                }}\r\n                onChange={onChangeprice}\r\n              ></input>\r\n\r\n              <p style={{ color: \"red\" }}>{formError.end}</p>\r\n            </div>\r\n            <button\r\n              style={{ height: \"40px\", width: \"70px\" }}\r\n              type=\"button\"\r\n              className=\"btn btn-primary col-md-3\"\r\n              onClick={filtereditem}\r\n            >\r\n              Filter\r\n            </button>\r\n          </div>\r\n          <div className=\"row\" style={{ marginBottom: \"1%\" }}>\r\n            <div className=\"col-md-4\">\r\n              <h6>Filter By Title</h6>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                onChange={(event) => {\r\n                  filteritem(event);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className=\"col-md-1  \"></div>\r\n\r\n            <div className=\"col-md-3  \">\r\n              <div>\r\n                <select\r\n                  data-toggle=\"dropdown\"\r\n                  className=\"form-select\"\r\n                  onChange={(categories) => {\r\n                    categoryitem(categories);\r\n                  }}\r\n                >\r\n                  <option value=\"All\">All</option>\r\n                  <option value=\"men's clothing\">Mens Clothing</option>\r\n                  <option value=\"jewelery\">Jewelery</option>\r\n                  <option value=\"electronics\">Electronics</option>\r\n                  <option value=\"women's clothing\">Womens Clothing</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <div className=\"row\">\r\n          {data && data.length ? (\r\n            data.map((value, index) => {\r\n              return (\r\n                <div className=\"col-md-4\" key={index}>\r\n                  <div\r\n                    className=\"card \"\r\n                    style={{\r\n                      height: \"25rem\",\r\n                      marginTop: \"5%\",\r\n                      background:\r\n                        \"linear-gradient(to bottom, #ffffff 0%, #ccccff 100%)\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className=\"card-body-center\"\r\n                      style={{ paddingTop: \"25px \" }}\r\n                    >\r\n                      <img\r\n                        className=\"card-img \"\r\n                        src={value.image}\r\n                        alt=\"Card image cap\"\r\n                        height=\"215px\"\r\n                        style={{\r\n                          width: \"45%\",\r\n\r\n                          margin: \"auto\",\r\n                          display: \"block\",\r\n                        }}\r\n                      />\r\n\r\n                      <h6\r\n                        className=\"text-center\"\r\n                        style={{\r\n                          color: \"ThreeDHighlight\",\r\n                          paddingTop: \"20px\",\r\n                        }}\r\n                      >\r\n                        {`$${value.price}`}\r\n                      </h6>\r\n                      <h6\r\n                        className=\" text-center\"\r\n                        style={{ paddingLeft: \"33px\", color: \"royalblue\" }}\r\n                      >\r\n                        {value.title}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : loading ? (\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"danger\"\r\n              size=\"xxlg\"\r\n              style={{\r\n                marginLeft: \"47%\",\r\n                marginTop: \"10%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ marginLeft: \"47%\", marginTop: \"15%\", color: \"red\" }}>\r\n                Error{\" \"}\r\n              </h1>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","C:\\programfiles_kabil\\Test_task\\application\\src\\Components\\Mobilephone.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":190,"column":23,"nodeType":"38","endLine":201,"endColumn":25},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]